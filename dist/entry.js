webpackJsonp([0],{0:function(e,t,n){e.exports=n(1)},1:function(e,t,n){try{(function(){"use strict";function e(e){return e&&e.__esModule?e:{default:e}}var t=n(2),u=e(t),l=n(32),r=e(l),o=n(171),a=n(234),i=e(a),d=o.hashHistory;r.default.render(u.default.createElement(o.Router,{history:d,routes:i.default}),document.getElementById("root"))}).call(this)}finally{}},234:function(e,t,n){try{(function(){"use strict";function e(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var u=n(2),l=e(u),r=n(171),o=n(235),a=e(o),i=function(e,t){n.e(1,function(e){t(null,n(236).default)})},d=l.default.createElement(r.Route,{path:"/",component:a.default},l.default.createElement(r.IndexRedirect,{to:"index"}),l.default.createElement(r.Route,{path:"index",getComponent:i}));t.default=d}).call(this)}finally{}},235:function(e,t,n){try{(function(){"use strict";function e(e){return e&&e.__esModule?e:{default:e}}function u(e){return r.default.createElement("div",null,e.children)}Object.defineProperty(t,"__esModule",{value:!0});var l=n(2),r=e(l);u.propTypes={children:r.default.PropTypes.any.isRequired},t.default=u}).call(this)}finally{}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,